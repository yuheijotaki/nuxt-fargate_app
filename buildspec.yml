version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
      docker: 19
  pre_build:
    commands:
      - echo test
      - npm install
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}
      # - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      # - REPOSITORY_NAME=nuxt-fargate_app
      # - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      # - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo End Logined to ECR
  build:
    commands:
      - npm run build
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t ${REPOSITORY_NAME}:${IMAGE_TAG} .
      - docker tag ${REPOSITORY_NAME}:latest ${REPOSITORY_URI}/${REPOSITORY_NAME}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Pushing started on `date`
      - echo Pushing the Docker image...
      - docker push ${REPOSITORY_URI}/${REPOSITORY_NAME}:${IMAGE_TAG}
      # - echo Writing image definitions file...
      # - printf '{"ImageURI":"%s"}' ${REPOSITORY_URI}/${REPOSITORY_NAME}:${IMAGE_TAG} > imageDetail.json
      # - envsubst < taskdef.template > taskdef.json
    finally:
      - echo Build completed on `date`

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
#     - taskdef.json
